### PRODUCTION SPEED CONFIG - Target: <30 seconds
### Optimized for RTX 4090 to meet 300s cooldown windows
### Maintains >0.6 CLIP threshold while maximizing throughput

### Input
input:
prompt:
# Focused negative prompt - shorter for speed
negative_prompt: "ugly, blurry, low quality, deformed, bad anatomy, flat, 2d"
mesh:
elevation: 0
# SPEED: Reduced from 256 to 128 (4x faster VAE encoding)
ref_size: 128
density_thresh: 1

### Output
outdir: logs
mesh_format: obj
save_path: ???

### Training
mvdream: True
imagedream: False
stablediff: False
stable_zero123: False
zero123_xl: False

# QUALITY: Higher guidance_scale = better prompt adherence and quality
lambda_sd: 1
lambda_zero123: 0
guidance_scale: 100  # Increased from 50 for better quality (still faster than original 120)

warmup_rgb_loss: True

# CRITICAL SPEED OPTIMIZATION: Use batch_size=1 for MVDream's 4-view architecture
# Each batch generates 4 views (1 main + 3 MVDream additional views)
# batch_size=1 means 1 iteration = 4 views total for MVDream
batch_size: 1

# SPEED OPTIMIZATION: Path A - 20 iterations for <30s target
# Target: 28.3s total time (FLUX 12s + BG 0.7s + 3D 15.6s)
# 20 iters at ~1.3 it/s = ~15.6s for 3D generation
iters: 20

anneal_timestep: True
iters_refine: 0  # Skip refinement for speed

# Tighter camera bounds = faster convergence
radius: 3.0
fovy: 49.1
min_ver: -20  # Reduced from -30
max_ver: 20   # Reduced from 30

load:
train_geo: False
invert_bg_prob: 0.5  # Keep randomness for robustness

### GUI
gui: False
force_cuda_rast: True  # SPEED: Force CUDA rasterization
H: 512  # Lower res for faster testing
W: 512

### Gaussian splatting - QUALITY OPTIMIZED for competition
num_pts: 6000  # Increased from 4000 for better detail (competitive miners use 6000-8000)
sh_degree: 1   # Changed from 0 to 1 to fix empty tensor issue

# Optimized learning rates for 20 iterations
position_lr_init: 0.002     # Increased for faster convergence
position_lr_final: 0.0001   # Higher final LR
position_lr_delay_mult: 0.01
position_lr_max_steps: 8    # 40% of 20 iters = 8

feature_lr: 0.015    # Increased from 0.01
opacity_lr: 0.08     # Increased from 0.05
scaling_lr: 0.008    # Increased from 0.005
rotation_lr: 0.008   # Increased from 0.005

# OPTIMIZED densification schedule (adjusted for 20 iters)
percent_dense: 0.025  # More aggressive pruning for speed
density_start_iter: 0
density_end_iter: 16  # Stop at 80% of total iters (80% of 20 = 16)
densification_interval: 5  # Densify every 5 iters (3-4 times: iter 5, 10, 15)
opacity_reset_interval: 500  # Less frequent (won't trigger in 50 iters)
densify_grad_threshold: 0.015  # Higher threshold = less densification = faster

### Textured Mesh
geom_lr: 0.0001
texture_lr: 0.2
